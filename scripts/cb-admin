#!/usr/bin/env python

import sys
from optparse import OptionParser

import clusterbank.models as models
from clusterbank.scripting import CBOption

if __name__ == "__main__":
    """cb-admin -u <username> -g <privileges>] [-r <privileges>]"""
    parser = OptionParser(option_class=CBOption)
    parser.add_option(
        "-u", "--user",
        dest="user", type="user",
        help="allocate/revoke on USER", metavar="USER")
    parser.add_option(
        "-g", "--grant",
        dest="grant", type="privileges", action="store", default=[],
        help="grant PRIVILEGES", metavar="PRIVILEGES")
    parser.add_option(
        "-r", "--revoke",
        dest="revoke", type="privileges", action="store", default=[],
        help="request a resource for PROJECT", metavar="PRIVILEGES")
    parser.add_option(
        "-v", "--view",
        dest="view", action="store_true", default=False,
        help="view the permissions of a user")
    (options, args) = parser.parse_args()
    
    if not options.user:
        print >> sys.stderr, "You must supply a user."
        sys.exit(1)
    user = options.user
    
    for privilege in options.grant:
        setattr(user, "can_" + privilege, True)
    for privilege in options.revoke:
        setattr(user, "can_" + privilege, False)
    models.lxr.objectstore.flush()
    
    if options.view:
        for privilege in CBOption.PRIVILEGES:
            if getattr(user, "can_" + privilege):
                print privilege
