clusterbank uses a system called "upstream" to track entities:

 * users
 * projects
 * resources

Each entity has a unique name and a canonical and immutable numeric id.

Also tracked are the relationships between these entities:

 * project membership -- users M:M projects
 * project ownership -- users M:M projects

The upstream is explicitly designed to be easy to implement as a drop-in
replacement for the upstream module provided with clusterbank. A clusterbank
upstream module must define the following functions:

get_project_id (project_name) => project_id
get_project_name (project_id) => project_name
get_project_members (project_id) => [user_id_1, user_id_2, ..., user_id_n]
get_project_owners (project_id) => [user_id_1, user_id_2, ..., user_id_n]
get_resource_id (resource_name) => resource_id
get_resource_name (resource_id) => resource_name
get_user_id (user_name) => user_id
get_user_name (user_id) => user_name
get_member_projects (user_id) => [project_id_1, project_id_2, ..., project_id_n]
get_owner_projects (user_id) => [project_id_1, project_id_2, ..., project_id_n]

Exceptional conditions:

When a call is made for an entity that does not exist, None, or an empty list
([]) should be returned as appropriate.

Examples:

get_project_id(does_not_exist) => None
get_project_members(does_not_exist) => []